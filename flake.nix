# This flake was initially generated by fh, the CLI for FlakeHub (version 0.1.24)

{

# _______________________________________________________________________________________________________________
#                                                 FLAKE INPUTS
# _______________________________________________________________________________________________________________
  
  inputs = {
    nixpkgs = {
      url = "https://flakehub.com/f/NixOS/nixpkgs/0.1.*";
      follows = "nixos-cosmic/nixpkgs";
    };
    flake-schemas = {
      url = "https://flakehub.com/f/DeterminateSystems/flake-schemas/*";  
    };
    determinate = {
      url = "https://flakehub.com/f/DeterminateSystems/determinate/*";
    };
    fh = {
      url = "https://flakehub.com/f/DeterminateSystems/fh/*";
    };
    flake-utils = {
      url = "github:numtide/flake-utils";
    };
    chaotic = {
      url = "github:chaotic-cx/nyx/nyxpkgs-unstable";
    };
    nixos-cosmic = {
      url = "github:lilyinstarlight/nixos-cosmic";
    };
    nur = {
      url = "github:nix-community/NUR";
      inputs.nixpkgs.follows = "nixpkgs";
    };
  }; 

# _______________________________________________________________________________________________________________
#                                                  FLAKE OUTPUTS
# _______________________________________________________________________________________________________________  
  
  outputs = inputs@{ self, nixpkgs, flake-schemas, determinate, fh, flake-utils, chaotic, nixos-cosmic, nur, ... }:
    
    let
      
      # Helpers for producing system-specific outputs
      supportedSystems = [ "x86_64-linux" ];
      forEachSupportedSystem = f: nixpkgs.lib.genAttrs supportedSystems (system: f {
        pkgs = import nixpkgs { inherit system; };
      });
    
    in {
      
      # Schemas tell Nix about the structure of your flake's outputs
      schemas = flake-schemas.schemas;

      
      # Development environments
      devShells = forEachSupportedSystem ({ pkgs }: {
        default = pkgs.mkShell {
          packages = [
            pkgs.nixpkgs-fmt
          ];
        };
      });
     
  # _______________________________________________________________________________________________________________
  #                                            NIXOS SYSTEM CONFIGURATIONS
  # _______________________________________________________________________________________________________________

      nixosConfigurations = {

      # _________________________________________________________________________________________________________
      #                                           NOTEBOOK-ACER
      # _________________________________________________________________________________________________________
        
        NOTEBOOK-ACER = nixpkgs.lib.nixosSystem {
          system = "x86_64-linux";
          specialArgs = { inherit inputs; };
          
          modules = [
          # -----------------------------------------------------------------------------------------------------
            { 
              environment.systemPackages = [ fh.packages.x86_64-linux.default ]; 
            }
          # -----------------------------------------------------------------------------------------------------
            determinate.nixosModules.default
            chaotic.nixosModules.default
            nixos-cosmic.nixosModules.default
          # -----------------------------------------------------------------------------------------------------
            ./configuration.nix
          # -----------------------------------------------------------------------------------------------------
            ./hosts/NOTEBOOK-ACER/boot.nix
            ./hosts/NOTEBOOK-ACER/hardware-configuration.nix
            ./hosts/NOTEBOOK-ACER/networking.nix
            ./hosts/NOTEBOOK-ACER/services.nix
          # -----------------------------------------------------------------------------------------------------
            ./modules/boot.nix
            ./modules/chaotic.nix
            ./modules/console.nix
            ./modules/environment.nix
            ./modules/i18n.nix
            ./modules/networking.nix
            ./modules/nix.nix
            ./modules/nixpkgs.nix
            ./modules/programs.nix
            ./modules/services.nix
            ./modules/system.nix
            ./modules/systemd.nix
            ./modules/time.nix
            ./modules/users.nix
            ./modules/zramSwap.nix
          # -----------------------------------------------------------------------------------------------------
            ./modules/gnome/services.nix
          # -----------------------------------------------------------------------------------------------------
          ];
        };

      # _________________________________________________________________________________________________________
      #                                                DESKTOP-HP
      # _________________________________________________________________________________________________________
        
        DESKTOP-HP = nixpkgs.lib.nixosSystem {
          system = "x86_64-linux";
          specialArgs = { inherit inputs; };
          
          modules = [
          # -----------------------------------------------------------------------------------------------------
            { 
              environment.systemPackages = [ fh.packages.x86_64-linux.default ]; 
            }
          # -----------------------------------------------------------------------------------------------------
            determinate.nixosModules.default
            chaotic.nixosModules.default
            nixos-cosmic.nixosModules.default
          # -----------------------------------------------------------------------------------------------------
            ./configuration.nix
          # -----------------------------------------------------------------------------------------------------
            ./hosts/DESKTOP-HP/boot.nix
            ./hosts/DESKTOP-HP/chaotic.nix
            ./hosts/DESKTOP-HP/environment.nix
            ./hosts/DESKTOP-HP/hardware-configuration.nix
            ./hosts/DESKTOP-HP/networking.nix
            ./hosts/DESKTOP-HP/programs.nix
          # -----------------------------------------------------------------------------------------------------
            ./modules/boot.nix
            ./modules/chaotic.nix
            ./modules/console.nix
            ./modules/environment.nix
            ./modules/i18n.nix
            ./modules/networking.nix
            ./modules/nix.nix
            ./modules/nixpkgs.nix
            ./modules/programs.nix
            ./modules/services.nix
            ./modules/system.nix
            ./modules/systemd.nix
            ./modules/time.nix
            ./modules/users.nix
            ./modules/zramSwap.nix
          # -----------------------------------------------------------------------------------------------------
            ./modules/cosmic/environment.nix
            ./modules/cosmic/hardware.nix
            ./modules/cosmic/nix.nix
            ./modules/cosmic/programs.nix
            ./modules/cosmic/services.nix
            ./modules/cosmic/systemd.nix
            ./modules/cosmic/xdg.nix
          # -----------------------------------------------------------------------------------------------------
          ];
        };
      
      };
    };
}
