# This flake was initially generated by fh, the CLI for FlakeHub (version 0.1.24)
{
  # Flake inputs
  inputs = {
    flake-schemas.url = "https://flakehub.com/f/DeterminateSystems/flake-schemas/*";
    determinate.url = "https://flakehub.com/f/DeterminateSystems/determinate/*";
    fh.url = "https://flakehub.com/f/DeterminateSystems/fh/*";
    nixpkgs.url = "nixos-cosmic/nixpkgs";
    nixpkgs.follows = "https://flakehub.com/f/NixOS/nixpkgs/0.1.*";
    nixos-cosmic.url = "github:lilyinstarlight/nixos-cosmic";
  };

  # Flake outputs that other flakes can use
  outputs = inputs@{ self, flake-schemas, determinate, fh, nixpkgs, nixos-cosmic, ... }:
    let
      # Helpers for producing system-specific outputs
      supportedSystems = [ "x86_64-linux" ];
      forEachSupportedSystem = f: nixpkgs.lib.genAttrs supportedSystems (system: f {
        pkgs = import nixpkgs { inherit system; };
      });
    in {
      # Schemas tell Nix about the structure of your flake's outputs
      schemas = flake-schemas.schemas;

      # Development environments
      devShells = forEachSupportedSystem ({ pkgs }: {
        default = pkgs.mkShell {
          packages = [
            pkgs.nixpkgs-fmt
          ];
        };
      });

      # NixOS system configurations
      nixosConfigurations = {

        NOTEBOOK-ACER = nixpkgs.lib.nixosSystem {
          system = "x86_64-linux";
          modules = [
            determinate.nixosModules.default
            { 
              environment.systemPackages = [ fh.packages.x86_64-linux.default ]; 
            }
            nixos-cosmic.nixosModules.default

            ./configuration.nix

            ./hosts/NOTEBOOK-ACER/hardware-configuration.nix
            ./hosts/NOTEBOOK-ACER/networking.nix
            ./hosts/NOTEBOOK-ACER/services.nix

            ./modules/boot.nix
            ./modules/console.nix
            ./modules/environment.nix
            ./modules/i18n.nix
            ./modules/networking.nix
            ./modules/nix.nix
            ./modules/nixpkgs.nix
            ./modules/programs.nix
            ./modules/services.nix
            ./modules/system.nix
            ./modules/systemd.nix
            ./modules/time.nix
            ./modules/users.nix
            ./modules/zram.nix
          ];
        };

        DESKTOP-HP = nixpkgs.lib.nixosSystem {
          system = "x86_64-linux";
          modules = [
            determinate.nixosModules.default
            { 
              environment.systemPackages = [ fh.packages.x86_64-linux.default ]; 
            }
            nixos-cosmic.nixosModules.default

            ./configuration.nix

            ./hosts/DESKTOP-HP/hardware-configuration.nix
            ./hosts/DESKTOP-HP/networking.nix

            ./modules/boot.nix
            ./modules/console.nix
            ./modules/environment.nix
            ./modules/i18n.nix
            ./modules/networking.nix
            ./modules/nix.nix
            ./modules/nixpkgs.nix
            ./modules/programs.nix
            ./modules/services.nix
            ./modules/system.nix
            ./modules/systemd.nix
            ./modules/time.nix
            ./modules/users.nix
            ./modules/zram.nix

            ./modules/cosmic/environment.nix
            ./modules/cosmic/nix.nix
            ./modules/cosmic/services.nix
            ./modules/cosmic/systemd.nix
            ./modules/cosmic/xdg.nix
          ];
        };
      
      };
    };
}
